import type { NextPage } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';

const GuruFilter: NextPage = ({ idcampanha }: any) => {
  const [count, setCount] = useState(5);
  const router = useRouter();
  const { query } = router;

  const urlData = Object.keys(query).map((key) => {
    const k = key.replace('amp;', '');
    return `${k}=${query[key]}`;
  });

  useEffect(() => {
    if (count >= 0) {
      setTimeout(() => {
        setCount(count - 1);
      }, 1000);
    }
  }, [count]);

  if (urlData.length === 0) {
    return <div>Loading...</div>;
  }

  const completeUrl = `https://links.criptomaniacos.com.br/form/${idcampanha}?${urlData.join(
    '&'
  )}`;

  return (
    <div>
      <Head>
        <title>Criptomaniacos: Obrigado pelo cadastro</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <meta httpEquiv="refresh" content={`1; URL='${completeUrl}'`} />
      </Head>

      <h1>Obrigado pelo seu cadastro</h1>
      {count > 0 ? (
        <p>Você será redirecionado em até {count} segundos.</p>
      ) : (
        <p>
          algo deu errado, mas pode acessar o link manuamente
          <a href={completeUrl}> clicando aqui</a>.
        </p>
      )}
    </div>
  );
};

export async function getStaticPaths() {
  return {
    paths: [],
    fallback: true, // false or 'blocking'
  };
}

export async function getStaticProps({ params }: any) {
  const { idcampanha } = params;
  return {
    props: { idcampanha }, // will be passed to the page component as props
  };
}

export default GuruFilter;

// https://criptomaniacos.cademi.com.br/api/postback/custom?token=25a9226459e51242a81c6e9e348a0960&codigo=000099999&produto_id=00022&cliente_email=eduardo@criptomaniacos.io&status=aprovado
